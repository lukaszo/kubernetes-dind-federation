version: '2.1'
services:
  etcd:
    hostname: etcd
    image: quay.io/coreos/etcd:v3.0.17
    ports: [ "4001" ]
    command: >
      /usr/local/bin/etcd
      --listen-client-urls 'http://etcd:4001'
      --advertise-client-urls 'http://etcd:4001'
      --initial-cluster-state new
  node:
    hostname: node
    privileged: true
    image: k8s.io/kubernetes-dind
    ports: [ "10248","10249" ]
    entrypoint:
    - bash
    - -xc
    - >
      HOSTNAME_OVERRIDE=$$(getent hosts node | cut -d' ' -f1 | sort -u | tail -1) &&
      N=$${HOSTNAME_OVERRIDE##*.} &&
      DOCKER_NETWORK_OFFSET=0.0.$${N}.0
      exec wrapdocker bash -c "
      sleep 5 && hyperkube kubelet
      --hostname-override=$${HOSTNAME_OVERRIDE}
      --node-labels="rack=$${N},gen=201$${N},failure-domain.beta.kubernetes.io/zone=zone_${CLUSTER_NAME},failure-domain.beta.kubernetes.io/region=region_${CLUSTER_NAME}"
      --kubeconfig="/root/.kube/config"
      --allow-privileged
      --cluster-dns=${DNS_SERVER_IP}
      --cluster-domain=${DNS_DOMAIN}
      --pod-manifest-path=/var/lib/kubelet/manifests
      --cgroups-per-qos=false
      --enforce-node-allocatable=
      --v=5 2>&1 | sed 's/^/kubelet: /' 1>&2 &
      hyperkube proxy
      --hostname-override=$${HOSTNAME_OVERRIDE}
      --master=http://apiserver:8888
      --cluster-cidr=\$$(ip addr show docker0 | grep -w inet | awk '{ print \$$2; }')
      --masquerade-all
      --proxy-mode=userspace
      --conntrack-max=0
      --conntrack-max-per-core=0
      --v=4 2>&1 | sed 's/^/proxy:   /' 1>&2 &
      wait \$$(jobs -p)
      "
    command: []
    environment:
    - VAR_LIB_DOCKER_SIZE=10
    - DOCKER_DAEMON_ARGS
    volumes:
    - ${DOCKER_IN_DOCKER_STORAGE_DIR}:/var/lib/docker
    - ${DOCKER_IN_DOCKER_AUTH_DIR}:/root/.kube:ro
    links:
    - apiserver
  apiserver:
    hostname: apiserver
    image: k8s.io/kubernetes-dind
    entrypoint:
    - /bin/bash
    - "-cxeu"
    - >
      echo "Hostname: $$(hostname -f) ($$(hostname -f | xargs resolveip.sh))" &&
      hyperkube apiserver
      --insecure-bind-address=$$(resolveip.sh apiserver)
      --external-hostname=apiserver
      --etcd-servers=http://etcd:4001
      --insecure-port=8888
      --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota,PersistentVolumeLabel
      --authorization-mode=RBAC
      --token-auth-file=/var/run/kubernetes/auth/token-users
      --basic-auth-file=/var/run/kubernetes/auth/basic-users
      --service-account-key-file=/var/run/kubernetes/auth/service-accounts-key.pem
      --service-cluster-ip-range=${SERVICE_CIDR}
      --service-node-port-range=30000-32767
      --allow-privileged
      --tls-cert-file=/var/run/kubernetes/auth/apiserver-bundle.pem
      --tls-private-key-file=/var/run/kubernetes/auth/apiserver-key.pem
      --runtime-config=api/all
      --v=4
    ports: [ "8888", "6443" ]
    volumes:
    - ${DOCKER_IN_DOCKER_WORK_DIR}/auth:/var/run/kubernetes/auth:ro
    links:
    - etcd
  controller:
    hostname: controller
    image: k8s.io/kubernetes-dind
    entrypoint:
    - /bin/bash
    - "-ceu"
    - >
      hyperkube controller-manager
      --address=$$(resolveip.sh controller)
      --master=http://apiserver:8888
      --service-account-private-key-file=/var/run/kubernetes/auth/service-accounts-key.pem
      --root-ca-file=/var/run/kubernetes/auth/ca.pem
      --v=4
    volumes:
    - ${DOCKER_IN_DOCKER_WORK_DIR}/auth:/var/run/kubernetes/auth:ro
    links:
    - apiserver
  scheduler:
    hostname: scheduler
    image: k8s.io/kubernetes-dind
    entrypoint:
    - /bin/bash
    - "-ceu"
    - >
      hyperkube scheduler
      --address=$$(resolveip.sh scheduler)
      --master=http://apiserver:8888
      --v=4
    links:
    - apiserver
